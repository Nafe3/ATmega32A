14:12:51 **** Incremental Build of configuration Debug for project 16-1-2020_2_LCD_password ****
make all 
Building file: ../main.c
Invoking: AVR Compiler
avr-gcc -Wall -g2 -gstabs -O0 -fpack-struct -fshort-enums -ffunction-sections -fdata-sections -std=gnu99 -funsigned-char -funsigned-bitfields -mmcu=atmega32 -DF_CPU=800000UL -MMD -MP -MF"main.d" -MT"main.o" -c -o "main.o" "../main.c"
In file included from ../main.c:4:
d:/iti/subjects/intro to es-assaf/tools/sdk/imt_sdk_win_64_avr/winavr/lib/gcc/../../avr/include/util/delay.h:90:3: warning: #warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
../main.c: In function 'main':
../main.c:44: warning: pointer targets in passing argument 1 of 'CLCD_voidWriteString' differ in signedness
../main.c:51: warning: pointer targets in passing argument 1 of 'CLCD_voidWriteString' differ in signedness
../main.c:68: warning: pointer targets in passing argument 1 of 'CLCD_voidWriteString' differ in signedness
../main.c:70: warning: pointer targets in passing argument 1 of 'CLCD_voidWriteString' differ in signedness
../main.c:76: warning: pointer targets in passing argument 1 of 'CLCD_voidWriteString' differ in signedness
../main.c:83: warning: pointer targets in passing argument 1 of 'CLCD_voidWriteString' differ in signedness
../main.c:86: warning: pointer targets in passing argument 1 of 'CLCD_voidWriteString' differ in signedness
Finished building: ../main.c
 
Building target: 16-1-2020_2_LCD_password.elf
Invoking: AVR C Linker
avr-gcc -Wl,-Map,16-1-2020_2_LCD_password.map -mmcu=atmega32 -o "16-1-2020_2_LCD_password.elf"  ./DIO_program.o ./KEYPAD_program.o ./LCD_program.o ./PORT_program.o ./main.o   
Finished building target: 16-1-2020_2_LCD_password.elf
 
Invoking: AVR Create Extended Listing
avr-objdump -h -S 16-1-2020_2_LCD_password.elf  >"16-1-2020_2_LCD_password.lss"
Finished building: 16-1-2020_2_LCD_password.lss
 
Create Flash image (ihex format)
avr-objcopy -R .eeprom -R .fuse -R .lock -R .signature -O ihex 16-1-2020_2_LCD_password.elf  "16-1-2020_2_LCD_password.hex"
Finished building: 16-1-2020_2_LCD_password.hex
 
Invoking: Print Size
avr-size --format=avr --mcu=atmega32 16-1-2020_2_LCD_password.elf
AVR Memory Usage
----------------
Device: atmega32

Program:    6686 bytes (20.4% Full)
(.text + .data + .bootloader)

Data:        102 bytes (5.0% Full)
(.data + .bss + .noinit)


Finished building: sizedummy
 
Invoking: AVRDude
D:\ITI\Subjects\Intro to ES-Assaf\Tools\SDK\IMT_SDK_Win_64_AVR\WinAVR\bin\avrdude -pm32 -cusbasp -u -Uflash:w:16-1-2020_2_LCD_password.hex:a -Ulfuse:w:0xff:m -Uhfuse:w:0xd9:m

avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: AVR device initialized and ready to accept instructions

Reading | ################################################## | 100% 0.00s

avrdude: Device signature = 0x1e9502
avrdude: NOTE: FLASH memory has been specified, an erase cycle will be performed
         To disable this feature, specify the -D option.
avrdude: erasing chip
avrdude: warning: cannot set sck period. please check for usbasp firmware update.
avrdude: reading input file "16-1-2020_2_LCD_password.hex"
avrdude: input file 16-1-2020_2_LCD_password.hex auto detected as Intel Hex
avrdude: writing flash (6686 bytes):

Writing | ################################################## | 100% 6.16s

avrdude: 6686 bytes of flash written
avrdude: verifying flash memory against 16-1-2020_2_LCD_password.hex:
avrdude: load data flash data from input file 16-1-2020_2_LCD_password.hex:
avrdude: input file 16-1-2020_2_LCD_password.hex auto detected as Intel Hex
avrdude: input file 16-1-2020_2_LCD_password.hex contains 6686 bytes
avrdude: reading on-chip flash data:

Reading | ################################################## | 100% 3.38s

avrdude: verifying ...
avrdude: 6686 bytes of flash verified
avrdude: reading input file "0xff"
avrdude: writing lfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of lfuse written
avrdude: verifying lfuse memory against 0xff:
avrdude: load data lfuse data from input file 0xff:
avrdude: input file 0xff contains 1 bytes
avrdude: reading on-chip lfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of lfuse verified
avrdude: reading input file "0xd9"
avrdude: writing hfuse (1 bytes):

Writing | ################################################## | 100% 0.00s

avrdude: 1 bytes of hfuse written
avrdude: verifying hfuse memory against 0xd9:
avrdude: load data hfuse data from input file 0xd9:
avrdude: input file 0xd9 contains 1 bytes
avrdude: reading on-chip hfuse data:

Reading | ################################################## | 100% 0.00s

avrdude: verifying ...
avrdude: 1 bytes of hfuse verified

avrdude done.  Thank you.

Finished building: avrdudedummy
 

14:13:02 Build Finished (took 10s.642ms)

